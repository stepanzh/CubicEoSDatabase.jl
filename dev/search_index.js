var documenterSearchIndex = {"docs":
[{"location":"outofboxdb/#Out-of-box-database","page":"Out-of-box database","title":"Out-of-box database","text":"","category":"section"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"Out-of-box database of physical and equation of state parameters lives in Data submodule.","category":"page"},{"location":"outofboxdb/#A-I-Martinez-database-of-gas-properties","page":"Out-of-box database","title":"A I Martinez database of gas properties","text":"","category":"section"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"This database can be accessed by Data.martinez.","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"Reference","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"using CubicEoSDatabase; reference(Data.martinez()) |> print","category":"page"},{"location":"outofboxdb/#Available-components","page":"Out-of-box database","title":"Available components","text":"","category":"section"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"using CubicEoSDatabase; join(keys(Data.martinez()), '\\n') |> print","category":"page"},{"location":"outofboxdb/#A-I-Brusilovsky-(general)-equation-of-state","page":"Out-of-box database","title":"A I Brusilovsky (general) equation of state","text":"","category":"section"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"Brusilovsky, SPE Reservoir Engineering, February 1992","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"This is a cubic 4-parameter equation of state. It has the following form for a component","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"P(upsilon T) = fracRTupsilon - b - fraca(T)(upsilon + c)(upsilon + d)","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"where","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"P upsilon T are pressure, molar volume and temperature of a substance respectively;\na(T) is temperature-dependent EoS parameter;\nb c d are constant EoS parameters.","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"The reason we call this equation of state \"general\" is that it can be transformed into common-used Soave-Redlich-Kwong and Peng-Robinson equations of state. This comes from internal relations between a(T) b c and d.","category":"page"},{"location":"outofboxdb/#Parameters-for-pure-components","page":"Out-of-box database","title":"Parameters for pure components","text":"","category":"section"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"This database can be accessed by Data.brusilovsky_comp.","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"Reference","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"using CubicEoSDatabase; reference(Data.brusilovsky_comp()) |> print","category":"page"},{"location":"outofboxdb/#Available-components-2","page":"Out-of-box database","title":"Available components","text":"","category":"section"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"using CubicEoSDatabase; join(keys(Data.brusilovsky_comp()), '\\n') |> print","category":"page"},{"location":"outofboxdb/#Binary-interaction-parameters","page":"Out-of-box database","title":"Binary interaction parameters","text":"","category":"section"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"This database can be accessed by Data.brusilovsky_mix.","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"Reference","category":"page"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"using CubicEoSDatabase; reference(Data.brusilovsky_mix()) |> print","category":"page"},{"location":"outofboxdb/#Available-pairs","page":"Out-of-box database","title":"Available pairs","text":"","category":"section"},{"location":"outofboxdb/","page":"Out-of-box database","title":"Out-of-box database","text":"using CubicEoSDatabase; join(keys(Data.brusilovsky_mix()), '\\n') |> print","category":"page"},{"location":"apireference/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"Pages = [\"apireference.md\"]\nDepth = 4","category":"page"},{"location":"apireference/#Preliminary","page":"API Reference","title":"Preliminary","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"Delimited-separated values (DSV file) — a text file representing tabular data by using a column delimiter char (e.g. .tsv, .csv).","category":"page"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"warning: DSV file size\nAs the package is built upon DelimitedFiles, a source file is loaded to RAM. Keep in mind size of your DSV files.","category":"page"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"We suppose that a row of source datafile uniquely determined by values at first K columns (e.g. names of components). We called these columns primary keys or just keys.","category":"page"},{"location":"apireference/#Main-module","page":"API Reference","title":"Main module","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"CubicEoSDatabase","category":"page"},{"location":"apireference/#CubicEoSDatabase","page":"API Reference","title":"CubicEoSDatabase","text":"Provides interface for loading parameteres of components and mixtures from separated values files.\n\nSee ComponentDatabase, BinaryMixtureDatabase, getentry, getmatrix.\n\nOut-of-box database stored in CubicEoSDatabase.Data module.\n\n\n\n\n\n","category":"module"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"Modules = [CubicEoSDatabase]","category":"page"},{"location":"apireference/#Types-and-accessors","page":"API Reference","title":"Types and accessors","text":"","category":"section"},{"location":"apireference/#Private-types","page":"API Reference","title":"Private types","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"CubicEoSDatabase.AbstractTabularDatabase","category":"page"},{"location":"apireference/#CubicEoSDatabase.AbstractTabularDatabase","page":"API Reference","title":"CubicEoSDatabase.AbstractTabularDatabase","text":"CubicEoSDatabase.AbstractTabularDatabase{K}\n\nSupertype for wrappers of databases. K is number of primary keys.\n\n\n\n\n\n","category":"type"},{"location":"apireference/#Accessors","page":"API Reference","title":"Accessors","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"data\nheader\nreference\nsource\nBase.keys(::CubicEoSDatabase.AbstractTabularDatabase)","category":"page"},{"location":"apireference/#CubicEoSDatabase.data","page":"API Reference","title":"CubicEoSDatabase.data","text":"data(x::AbstractTabularDatabase)\n\nReturns matrix with parsed data stored in x.\n\n\n\n\n\n","category":"function"},{"location":"apireference/#CubicEoSDatabase.header","page":"API Reference","title":"CubicEoSDatabase.header","text":"header(x::AbstractTabularDatabase)\n\nReturns collection of source file headers of x.\n\n\n\n\n\n","category":"function"},{"location":"apireference/#CubicEoSDatabase.reference","page":"API Reference","title":"CubicEoSDatabase.reference","text":"reference(x::AbstractTabularDatabase)\n\nReturns biblio reference of x.\n\n\n\n\n\n","category":"function"},{"location":"apireference/#CubicEoSDatabase.source","page":"API Reference","title":"CubicEoSDatabase.source","text":"source(x::AbstractTabularDatabase)\n\nReturns path to source file which x maps to.\n\n\n\n\n\n","category":"function"},{"location":"apireference/#Base.keys-Tuple{CubicEoSDatabase.AbstractTabularDatabase}","page":"API Reference","title":"Base.keys","text":"keys(atd::AbstractTabularDatabase{K})\n\nReturn an iterator over all keys in atd.\n\nFor AbstractTabularDatabase{1} key is string.\n\nFor AbstractTabularDatabase{K≥2} key is Tuple of length K with strings.\n\n\n\n\n\n","category":"method"},{"location":"apireference/#Public-types","page":"API Reference","title":"Public types","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"ComponentDatabase\nMixtureDatabase","category":"page"},{"location":"apireference/#CubicEoSDatabase.ComponentDatabase","page":"API Reference","title":"CubicEoSDatabase.ComponentDatabase","text":"ComponentDatabase(source[; delim, reference]) <: AbstractTabularDatabase{1}\n\nWraps source DSV-file formatted as separated values.\n\nAimed at tables with single primary key (e.g. component name).\n\nArguments\n\nsource::AbstractString: path to source file\ndelim::AbstractChar=',': column delimiter used in source\nreference::AbstractString: optional biblio-reference describing source\n\n\n\n\n\n","category":"type"},{"location":"apireference/#CubicEoSDatabase.MixtureDatabase","page":"API Reference","title":"CubicEoSDatabase.MixtureDatabase","text":"MixtureDatabase(source[; delim, reference]) <: AbstractTabularDatabase{2}\n\nWraps source file formatted as separated values.\n\nAimed at tables with two primary keys (e.g. two names of components).\n\nArguments\n\nsource::AbstractString: path to source file\ndelim::AbstractChar=',': column delimiter used in source\nreference::AbstractString: optional biblio-reference describing source\n\n\n\n\n\n","category":"type"},{"location":"apireference/#Database-requests","page":"API Reference","title":"Database requests","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"warning: Linear request time\nCurrent implementation of requests takes O(N) time, where N is number of rows in source file.","category":"page"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"getentry\ngetmatrix","category":"page"},{"location":"apireference/#CubicEoSDatabase.getentry","page":"API Reference","title":"CubicEoSDatabase.getentry","text":"getentry(from::AbstractTabularDatabase{1}, key::AbstractString)\n\nSearches database from for row (entry) with first item equal to key.\n\nReturns Dict which keys are header(from) and values are corresponding data.\n\nThrows CubicEoSDatabase.NotFoundError if key was not found.\n\n\n\n\n\ngetentry(from::AbstractTabularDatabase{2}, key₁, key₂[; keeporder])\n\nSearches database from for row (entry) which first two items are equal to key₁ and key₂. If keeporder is true then the keys are assumed to be ordered pair (default is false).\n\nReturns Dict which keys are header(from), and values are corresponding data.\n\nThrows CubicEoSDatabase.NotFoundError if key pair was not found.\n\n\n\n\n\n","category":"function"},{"location":"apireference/#CubicEoSDatabase.getmatrix","page":"API Reference","title":"CubicEoSDatabase.getmatrix","text":"getmatrix(from::AbstractTabularDatabase{2}, keys[; diag])\n\nExtracts matrices from from by unordered key pairs generated from keys.\n\nEach matrix corresponds to a data column in from. Indices of a matrix are same as in keys. The returned matrices are symmetric with diagonal elements diag=0.0.\n\nReturns Dict which keys are header(from) and values are matrices.\n\nThrows CubicEoSDatabase.NotFoundError if a key pair was not found.\n\nArguments\n\nkeys: collection, must support eachindex method\n\n\n\n\n\n","category":"function"},{"location":"apireference/#Error-handling","page":"API Reference","title":"Error handling","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"CubicEoSDatabase.NotFoundError","category":"page"},{"location":"apireference/#CubicEoSDatabase.NotFoundError","page":"API Reference","title":"CubicEoSDatabase.NotFoundError","text":"CubicEoSDatabase.NotFoundError(what, where) <: Exception\n\nDescribes where what was not found. The where should be database object.\n\n\n\n\n\n","category":"type"},{"location":"apireference/#Data-submodule","page":"API Reference","title":"Data submodule","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"CubicEoSDatabase.jl comes with out-of-box database. It lives in public Data submodule. See Out-of-box database for details.","category":"page"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"info: Databases are cached\nEach database presented in Data is cached. So only first call will allocate memory.","category":"page"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"Modules = [Data]","category":"page"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"Data\nData.martinez()\nData.brusilovsky_comp()\nData.brusilovsky_mix()","category":"page"},{"location":"apireference/#CubicEoSDatabase.Data","page":"API Reference","title":"CubicEoSDatabase.Data","text":"Repository database of thermodynamical properties.\n\nExported methods are\n\nmartinez()::ComponentDatabase: gas properties of substances;\nbrusilovsky_comp()::ComponentDatabase: parameters of A I Brusilovskii equation of state for pure components;\nbrusilovsky_mix()::MixtureDatabase: binary parameters of A I Brusilovskii equation of state for mixtures.\n\n\n\n\n\n","category":"module"},{"location":"apireference/#CubicEoSDatabase.Data.martinez-Tuple{}","page":"API Reference","title":"CubicEoSDatabase.Data.martinez","text":"Data.martinez() -> ComponentDatabase\n\nI Martinez gas properties.\n\n\n\n\n\n","category":"method"},{"location":"apireference/#CubicEoSDatabase.Data.brusilovsky_comp-Tuple{}","page":"API Reference","title":"CubicEoSDatabase.Data.brusilovsky_comp","text":"Data.brusilovsky_comp() -> ComponentDatabase\n\nA I Brusilovsky equation of state. Parameters for pure components.\n\n\n\n\n\n","category":"method"},{"location":"apireference/#CubicEoSDatabase.Data.brusilovsky_mix-Tuple{}","page":"API Reference","title":"CubicEoSDatabase.Data.brusilovsky_mix","text":"Data.brusilovsky_mix() -> MixtureDatabase\n\nA I Brusilovsky equation of state. Binary parameters for mixtures.\n\n\n\n\n\n","category":"method"},{"location":"apireference/#Internals","page":"API Reference","title":"Internals","text":"","category":"section"},{"location":"apireference/","page":"API Reference","title":"API Reference","text":"CubicEoSDatabase.Data.root\nCubicEoSDatabase.Data.CachedDatabase","category":"page"},{"location":"apireference/#CubicEoSDatabase.Data.root","page":"API Reference","title":"CubicEoSDatabase.Data.root","text":"Root path of database source files.\n\n\n\n\n\n","category":"constant"},{"location":"apireference/#CubicEoSDatabase.Data.CachedDatabase","page":"API Reference","title":"CubicEoSDatabase.Data.CachedDatabase","text":"Cache of a database ::T. Stores arguments needed to initialize T.\n\n\n\n\n\n","category":"type"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Loading parameters of equations of state from source files.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package provides wrappers (see Types and accessors) for separated-values files and request methods (see Database requests).","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Works with delimiter-separated value text files.\nLightweight, no third-party dependencies. Based on built-in DelimitedFiles.\nIncludes Out-of-box database.","category":"page"},{"location":"#Quick-start","page":"Home","title":"Quick start","text":"","category":"section"},{"location":"#Obtaining-parameters-of-components","page":"Home","title":"Obtaining parameters of components","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"brusilovsky_comp = \"\"\"\n    name,critical_compressibility,critical_omega,psi\n    nitrogen,0.34626,0.75001,0.37182\n    methane,0.33294,0.7563,0.37447\n    n-butane,0.31232,0.76921,0.57594\n    n-hexane,C5+,C5+,C5+\n    \"\"\"\nbrusilovsky_mix = \"\"\"\n    comp1,comp2,constant,linear,quadratic\n    nitrogen,n-heptane,0.168,0.000558,0\n    methane,ethane,-0.015,0.000123,-0.41\n    methane,propane,0.019,0.000502,0\n    methane,n-butane,0.031,0.000502,0\n    propane,n-butane,-0.063,0.000559,0\n    \"\"\"\n\nprint(open(\"brusilovsky.csv\", \"w\"), brusilovsky_comp)\nprint(open(\"brusilovsky_mix.csv\", \"w\"), brusilovsky_mix)\n\nnothing","category":"page"},{"location":"","page":"Home","title":"Home","text":"Suppose a file brusilovsky.csv which collects eos-parameters of components","category":"page"},{"location":"","page":"Home","title":"Home","text":"read(open(\"brusilovsky.csv\"), String) |> print","category":"page"},{"location":"","page":"Home","title":"Home","text":"To obtain parameters of a component (e.g. methane) wrap the source file with ComponentDatabase and use getentry","category":"page"},{"location":"","page":"Home","title":"Home","text":"using CubicEoSDatabase\ncomp_eos = ComponentDatabase(\"brusilovsky.csv\");\ngetentry(comp_eos, \"methane\")","category":"page"},{"location":"#Obtaining-parameters-of-pair-of-components","page":"Home","title":"Obtaining parameters of pair of components","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Some parameters of equation of state are determined by pair of components (e.g. binary interaction).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Suppose a file brusilovsky_mix.csv collecting binary interaction parameters.","category":"page"},{"location":"","page":"Home","title":"Home","text":"read(open(\"brusilovsky_mix.csv\"), String) |> print","category":"page"},{"location":"","page":"Home","title":"Home","text":"To obtain parameters of methane + ethane wrap the source file with MixtureDatabase and use getentry","category":"page"},{"location":"","page":"Home","title":"Home","text":"using CubicEoSDatabase\nmix_eos = MixtureDatabase(\"brusilovsky_mix.csv\");\ngetentry(mix_eos, \"methane\", \"ethane\")","category":"page"},{"location":"#Obtaining-matrices-of-binary-parameters","page":"Home","title":"Obtaining matrices of binary parameters","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Actually, the file brusilovsky_mix.csv stores three matrices with coefficients","category":"page"},{"location":"","page":"Home","title":"Home","text":"C_ij in column 'constant'\nL_ij in column 'linear'\nQ_ij in column 'quadratic'","category":"page"},{"location":"","page":"Home","title":"Home","text":"where i j are names of components (columns 'comp1' and 'comp2').","category":"page"},{"location":"","page":"Home","title":"Home","text":"To obtain these matrices for mixture of methane, propane and n-butane, do the following","category":"page"},{"location":"","page":"Home","title":"Home","text":"using CubicEoSDatabase\nmix_eos = MixtureDatabase(\"brusilovsky_mix.csv\");\ngetmatrix(mix_eos, (\"methane\", \"propane\", \"n-butane\"); diag=0.0)","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
